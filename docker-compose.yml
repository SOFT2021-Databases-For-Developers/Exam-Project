version: '3'
services:
  discovery:
    build:
      context: Microservices/Microservice-Discovery-Application
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  mongo-api:
    build:
      context: Microservices/Mongo-Microservice
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://discovery:8761/eureka
    depends_on:
      - discovery
    ports:
      - "25002:25002"
    links:
      - mongo
    entrypoint: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"

  postgres-api:
    build:
      context: Microservices/Postgresql-Microservice
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://discovery:8761/eureka
    depends_on:
      - discovery
    ports:
      - "25001:25001"
    links:
      - postgres
    entrypoint: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"

  neo4j-api:
    build:
      context: Microservices/Neo4j-Webservice
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://discovery:8761/eureka
    depends_on:
      - discovery
    ports:
      - "25004:25004"
    links:
      - neo4j
    entrypoint: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"


  redis-api:
    build:
      context: Microservices/Redis-Webservice
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://discovery:8761/eureka
    depends_on:
      - discovery
    ports:
      - "25003:25003"
    links:
      - redis
    entrypoint: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"

  gateway-api:
    build:
      context: ApiGateway
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://discovery:8761/eureka
    depends_on:
      - discovery
    ports:
      - "25000:25000"
    links:
      - redis
      - mongo
      - neo4j
      - postgres
    entrypoint: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"

  postgres:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: exam_db
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
  
  redis:
    container_name: redis_container
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

  neo4j:
    image: neo4j:4.0.3
    hostname: neo4j
    container_name: neo4j_container
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/admin
      NEO4J_dbms_logs_debug_level: DEBUG 
volumes:
  mongodb_data_container: